#
# Factory tree
#

import produceProduct:"ch.chrummibei.silvercoin.ai.tasks.factory.ProduceProductTask"
import updateSellTrade:"ch.chrummibei.silvercoin.ai.tasks.factory.UpdateSellTradeTask"
import buyIngredients:"ch.chrummibei.silvercoin.ai.tasks.factory.BuyIngredientsTask"
import isProductStockSmallerThan?:"ch.chrummibei.silvercoin.ai.tasks.factory.ProductStockSmallerThanCondition"
import isProductStockGreaterThan?:"ch.chrummibei.silvercoin.ai.tasks.factory.ProductStockGreaterThanCondition"
import changeSpread:"ch.chrummibei.silvercoin.ai.tasks.factory.ChangeSpreadTask"

root
  selector
    sequence # if stock is full, decrease spread and succeed
      isProductStockGreaterThan? stockToGoalFactor:1
      alwaysSucceed
        changeSpread spreadChangeFactor:0.9999  # decrease price spread by 1%
      updateSellTrade
    alwaysFail  # even if we make it more expensive, never stop producing
      sequence
        # if we're empty, everyone is buying our stuff, so we can make it more expensive
        isProductStockSmallerThan? stockToGoalFactor:0
        changeSpread spreadChangeFactor:1.01  # increase price spread by 1%
    sequence
      produceProduct
      updateSellTrade
    sequence
      random success:"uniform,0.1" # success in 10% of cases
        success
      buyIngredients # succeeds if we were able to buy ingredients
      #wait seconds:"uniform,1,2" # After buying ingredients, we wait between 1 and 2 seconds
